{"version":3,"file":"createIconSetFromFontAwesome6.js","sourceRoot":"","sources":["../src/createIconSetFromFontAwesome6.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\nimport createMultiStyleIconSet, { MultiStyleIcon } from './createMultiStyleIconSet';\nimport { GlyphMap } from './createIconSet';\n\nexport const FA6Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand',\n  sharpLight: 'light',\n  sharp: 'regular',\n  sharpSolid: 'solid',\n  duotone: 'duotone',\n  thin: 'light',\n};\n\nexport function createFA6IconSet<G extends string, K extends string>(\n    glyphMap: GlyphMap<G>,\n    metadata: Record<K, G[]>,\n    fonts,\n    pro = false\n) {\n  const metadataKeys = Object.keys(metadata);\n  const fontFamily = `FontAwesome6${pro ? 'Pro' : 'Free'}`;\n\n  function fallbackFamily(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n\n    return 'regular';\n  }\n\n  function glyphValidator(glyph, style) {\n    let family = style === 'brand' ? 'brands' : style;\n    family = style === 'sharpSolid' ? 'sharp-solid' : family;\n    return family in metadata && metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function createFontAwesomeStyle(style, fontWeight, family = fontFamily) {\n    let styleName = style;\n    const fontFile = fonts[styleName];\n\n    if (styleName === 'Brands') {\n      styleName = 'Regular';\n    }\n\n    if (styleName === 'Duotone') {\n      styleName = 'Solid';\n    }\n    styleName = styleName.replace('Sharp_', '');\n\n    return {\n      fontFamily: `${family}-${styleName}`,\n      fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight,\n        },\n        default: {},\n      }),\n      glyphMap,\n    };\n  }\n\n  const brandIcons = createFontAwesomeStyle('Brand', '400');\n  const lightIcons = createFontAwesomeStyle('Light', '100');\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\n  const solidIcons = createFontAwesomeStyle('Solid', '700');\n  const sharpLightIcons = createFontAwesomeStyle(\n    'Sharp_Light',\n    '300',\n    `${fontFamily}Sharp`\n  );\n  const sharpIcons = createFontAwesomeStyle(\n    'Sharp_Regular',\n    '400',\n    `${fontFamily}Sharp`\n  );\n  const sharpSolidIcons = createFontAwesomeStyle(\n    'Sharp_Solid',\n    '900',\n    `${fontFamily}Sharp`\n  );\n  const duotoneIcons = createFontAwesomeStyle(\n    'Duotone',\n    '900',\n    `${fontFamily}Duotone`\n  );\n  const thinIcons = createFontAwesomeStyle('Thin', '100', `${fontFamily}Thin`);\n  const Icon = createMultiStyleIconSet<G>(\n    {\n      brand: brandIcons,\n      light: lightIcons,\n      regular: regularIcons,\n      solid: solidIcons,\n      sharpLight: sharpLightIcons,\n      sharp: sharpIcons,\n      sharpSolid: sharpSolidIcons,\n      duotone: duotoneIcons,\n      thin: thinIcons,\n    },\n    {\n      defaultStyle: 'regular',\n      fallbackFamily,\n      glyphValidator,\n    },\n  );\n\n  return Icon;\n}"]}